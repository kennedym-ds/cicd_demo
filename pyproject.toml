[tool.poetry]
name = "python-cicd-demo"
version = "0.1.0"
description = "A comprehensive Python CI/CD demo showcasing modern software engineering best practices"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "python_cicd_demo", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pre-commit = "^3.3.3"
bandit = "^1.7.5"
black = "^23.7.0"
isort = "^5.12.0"
python-semantic-release = "^8.0.0"
sphinx = "^7.1.0"
sphinx-rtd-theme = "^1.3.0"
myst-parser = "^2.0.0"
pbr = "^7.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=src/python_cicd_demo --cov-report=xml --cov-report=term-missing"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_pattern = [
    "src/python_cicd_demo/__init__.py:__version__ = \"{version}\"",
]
build_command = "poetry build"
